Welcome to Scheme 48 1.9 (made by orlo on 2014-07-11)
See http://s48.org/ for more information.
Please report bugs to scheme-48-bugs@s48.org.
Get more information at http://www.s48.org/.
Type ,? (comma question-mark) for help.
> > > > > > ; no values returned
> ; no values returned
> ; no values returned
> > ; no values returned
> > ; no values returned
> > ; no values returned
> > ; no values returned
> > ; no values returned
> > ; no values returned
> > ; no values returned
> > ; no values returned
> > 
#t
> quadratic
#t
> Applied to 1 0 0  produced: (0)    CORRECT
#t
> Applied to 1 3 -4  produced: (-4.0 1.0)    CORRECT
#t
> Applied to -2 5 3  produced: (-0.5 3.0)    CORRECT
#t
> Applied to 1 2 1  produced: (-1)    CORRECT
#t
> Applied to 1 2 5  produced: ()    CORRECT
#t
> > 
#t
> minutesBetween
#t
> Applied to 12 5 13 3  produced: 58    CORRECT
#t
> Applied to 0 0 23 59  produced: 1    CORRECT
#t
> Applied to 23 59 0 0  produced: 1    CORRECT
#t
> Applied to 1 0 2 0  produced: 60    CORRECT
#t
> Applied to 3 0 2 0  produced: 60    CORRECT
#t
> Applied to 1 59 2 0  produced: 1    CORRECT
#t
> Applied to 3 0 2 59  produced: 1    CORRECT
#t
> Applied to 0 0 12 30  produced: 690    CORRECT
#t
> Applied to 0 0 12 0  produced: 720    CORRECT
#t
> > 
#t
> negatives
#t
> Applied to (-1 1 2 3 4 -4 5)  produced: (-1 -4)    CORRECT
#t
> Applied to (1 1 2 3 4 4 5)  produced: ()    CORRECT
#t
> Applied to (1)  produced: ()    CORRECT
#t
> Applied to (-1)  produced: (-1)    CORRECT
#t
> Applied to (1 -1)  produced: (-1)    CORRECT
#t
> Applied to ()  produced: ()    CORRECT
#t
> > 
#t
> reverse
#t
> Applied to (-1 1 2 3 4 -4 5)  produced: (5 -4 4 3 2 1 -1)    CORRECT
#t
> Applied to (1 1 2 3 4 4 5)  produced: (5 4 4 3 2 1 1)    CORRECT
#t
> Applied to (1)  produced: (1)    CORRECT
#t
> Applied to (-1)  produced: (-1)    CORRECT
#t
> Applied to (1 -1)  produced: (-1 1)    CORRECT
#t
> Applied to ()  produced: ()    CORRECT
#t
> > 
#t
> isFlatListOfNumbers
#t
> Applied to (-1 1 2 3 4 -4 5)  produced: #t    CORRECT
#t
> Applied to (-1 1 2 (3 4) -4 5)  produced: #f    CORRECT
#t
> Applied to (-1 b 5)  produced: #f    CORRECT
#t
> Applied to a  produced: #f    CORRECT
#t
> Applied to 1  produced: #f    CORRECT
#t
> Applied to a  produced: #f    CORRECT
#t
> Applied to (1)  produced: #t    CORRECT
#t
> Applied to ()  produced: #t    CORRECT
#t
> > 
#t
> minAndMax
#t
> Applied to (1 2 -3 4 2)  produced: (-3 4)    CORRECT
#t
> Applied to (1)  produced: (1 1)    CORRECT
#t
> Applied to (10000 20000 -30000 40000 20000)  produced: (-30000 40000)    CORRECT
#t
> Applied to (-10000 -20000 30000 -40000 -20000)  produced: (-40000 30000)    CORRECT
#t
> Applied to (-100000)  produced: (-100000 -100000)    CORRECT
#t
> > 
#t
> crossProduct
#t
> Applied to () ()  produced: ()    CORRECT
#t
> Applied to (1 2) (a b c)  produced: ((1 a) (1 b) (1 c) (2 a) (2 b) (2 c))    CORRECT
#t
> Applied to (1) (a b c)  produced: ((1 a) (1 b) (1 c))    CORRECT
#t
> Applied to (1) (a)  produced: ((1 a))    CORRECT
#t
> Applied to (1 2) (a)  produced: ((1 a) (2 a))    CORRECT
#t
> Applied to (1) (a b)  produced: ((1 a) (1 b))    CORRECT
#t
> > 
#t
> replace
#t
> Applied to a x (a a (a b c) a b a c ((a)) a b)  produced: ()    INCORRECT.  Should have produced: (x)
#f
> Applied to a x (a)  produced: ()    INCORRECT.  Should have produced: (x)
#f
> Applied to a x ()  produced: ()    CORRECT
#t
> Applied to a x (() ())  produced: ()    INCORRECT.  Should have produced: (())
#f
> Applied to a x ((x) (x))  produced: ()    INCORRECT.  Should have produced: (())
#f
> Applied to a x ((a) (a))  produced: ()    INCORRECT.  Should have produced: (())
#f
> Applied to a (1 2 3) ((a) (a))  produced: ()    INCORRECT.  Should have produced: (())
#f
> > 
#t
> getLatLon
#t
> Applied to 99553 Akutan AK Aleutians East (..zipcodes..)  produced: (54.143 -165.7854)    CORRECT
#t
> Applied to 45056 Oxford OH Butler (..zipcodes..)  produced: (39.4792 -84.6857)    CORRECT
#t
> Applied to 11111 Oxford OH Butler (..zipcodes..)  produced: ()    CORRECT
#t
> Applied to 96793 Wailuku HI Maui (..zipcodes..)  produced: (20.8966 -156.5036)    CORRECT
#t
> Applied to 48134 Flat Rock MI Wayne (..zipcodes..)  produced: (42.1055 -83.2795)    CORRECT
#t
> > 
#t
> getStatesThatContainThisCity
#t
> Applied to Oxford (..zipcodes..)  produced: (AL AR CT FL GA IA IN KS MA MD ME MI MS NC NE NJ NY OH PA WI)    CORRECT
#t
> Applied to Franklin (..zipcodes..)  produced: (AL AR GA ID IL IN KS KY LA MA ME MI MN MO NC NE NH NJ NY OH PA TN TX VA VT WI WV)    CORRECT
#t
> Applied to Tippecanoe (..zipcodes..)  produced: (IN OH)    CORRECT
#t
> Applied to King Of Prussia (..zipcodes..)  produced: (PA)    CORRECT
#t
> Applied to TheNameOfACityThatDoesNotExist (..zipcodes..)  produced: ()    CORRECT
#t
> > 
#t
> getDistanceBetweenLocations
#t
> 
assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45056 "Oxford" "OH" "Butler" 99553 "Akutan" ---))
1> 
assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(99553 "Akutan" "AK" "Aleutians East" 45056 "Oxford" ---))
2> 
assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45056 "Oxford" "OH" "Butler" 47003 "West College Corner" ---))
3> 
assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45056 "Oxford" "OH" "Butler" 45056 "Oxford" ---))
4> 
assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45042 "Middletown" "OH" "Butler" 45043 "Middletown" ---))
5> 5> 5> ; no values returned
5> ; no values returned
5> ; no values returned
5> 5> 
#t
5> simpleFilter
#t
5> Applied to (1 2 3 11 22 33 -1 -2 -3 -11 -22 -33) #{procedure 8521 positive?}  produced: (1 2 3 11 22 33)    CORRECT
#t
5> Applied to (1 2 3 11 22 33 -1 -2 -3 -11 -22 -33) #{procedure 8827 large?}  produced: (11 22 33 -11 -22 -33)    CORRECT
#t
5> Applied to () #{procedure 8827 large?}  produced: ()    CORRECT
#t
5> Applied to (0) #{procedure 8827 large?}  produced: ()    CORRECT
#t
5> Applied to (10) #{procedure 8827 large?}  produced: (10)    CORRECT
#t
                     user
7> 

assertion-violation: undefined variable [global]
                     complexfilter
                     user
6> 

assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45042 "Middletown" "OH" "Butler" 45043 "Middletown" ---))
5> 

assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45056 "Oxford" "OH" "Butler" 45056 "Oxford" ---))
4> 

assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45056 "Oxford" "OH" "Butler" 47003 "West College Corner" ---))
3> 

assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(99553 "Akutan" "AK" "Aleutians East" 45056 "Oxford" ---))
2> 

assertion-violation: wrong number of arguments [closed-apply]
                     (apply #{procedure 8531 getdistancebetweenzipcodes} '(45056 "Oxford" "OH" "Butler" 99553 "Akutan" ---))
1> 
> 
